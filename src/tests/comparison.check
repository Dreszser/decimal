#suite s21_comparison_test

#test s21_comparison_test1
s21_decimal num1 = {{0x1, 0x0, 0x0, 0x0}};
s21_decimal num2 = {{0x142d98, 0x0, 0x0, 0x10000}};
int s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_less(num2, num1);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test2
s21_decimal num1 = {{0x142d98, 0x0, 0x0, 0x10000}};
s21_decimal num2 = {{0x1, 0x0, 0x0, 0x0}};
int s21_res = s21_is_greater(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_greater(num2, num1);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test3
s21_decimal num1 = {{0xa23a3dee, 0x24eca4, 0x0, 0x120000}};
s21_decimal num2 = {{0x1, 0x0, 0x0, 0x170000}};
int s21_res = s21_is_less_or_equal(num1, num2);
ck_assert_int_eq(s21_res, 0);
s21_res = s21_is_less_or_equal(num2, num1);
ck_assert_int_eq(s21_res, 1);

#test s21_comparison_test4
s21_decimal num1 = {{0xa23a3dee, 0x24eca4, 0x0, 0x120000}};
s21_decimal num2 = {{0x1, 0x0, 0x0, 0x170000}};
int s21_res = s21_is_greater_or_equal(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_greater_or_equal(num2, num1);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test5
s21_decimal num1 = {{0xffffffff, 0xffffffff, 0xffffffff, 0x0}};
s21_decimal num2 = {{0xfffffffe, 0xffffffff, 0xffffffff, 0x0}};
int s21_res = s21_is_equal(num1, num2);
ck_assert_int_eq(s21_res, 0);
s21_res = s21_is_not_equal(num2, num1);
ck_assert_int_eq(s21_res, 1);

#test s21_comparison_test6
s21_decimal num1 = {{0xffffffff, 0xffffffff, 0xffffffff, 0x0}};
s21_decimal num2 = {{0xffffffff, 0xffffffff, 0xffffffff, 0x0}};
int s21_res = s21_is_equal(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_not_equal(num2, num1);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test7
s21_decimal num1 = {{0x1, 0x0, 0x0, 0x801c0000}};
s21_decimal num2 = {{0x1, 0x0, 0x0, 0x1c0000}};
int s21_res = s21_is_less_or_equal(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_less_or_equal(num2, num1);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test8
s21_decimal num1 = {{0x1, 0x0, 0x0, 0x801c0000}};
s21_decimal num2 = {{0x1, 0x0, 0x0, 0x1c0000}};
int s21_res = s21_is_less_or_equal(num2, num1);
ck_assert_int_eq(s21_res, 0);
s21_res = s21_is_less_or_equal(num1, num2);
ck_assert_int_eq(s21_res, 1);

#test s21_comparison_test9
s21_decimal num1 = {{0x0, 0x0, 0x0, 0x80000000}};
s21_decimal num2 = {{0x0, 0x0, 0x0, 0x0}};
int s21_res = s21_is_equal(num2, num1);
ck_assert_int_eq(s21_res, 1);
s21_res = s21_is_equal(num1, num2);
ck_assert_int_eq(s21_res, 1);

#test s21_comparison_test10
s21_decimal num1 = {{0x123, 0x123, 0x2, 0x0}};
s21_decimal num2 = {{0x1, 0x1, 0x1, 0x0}};
int s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 0);
s21_negate(num1, &num1);
s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_negate(num2, &num2);
s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 1);

#test s21_comparison_test11
s21_decimal num1 = {{0x1, 0x1, 0x1, 0x0}};
s21_decimal num2 = {{0x123, 0x123, 0x2, 0x0}};
int s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 1);
s21_negate(num2, &num2);
s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 0);
s21_negate(num1, &num1);
s21_res = s21_is_less(num1, num2);
ck_assert_int_eq(s21_res, 0);

#test s21_comparison_test12
s21_decimal num1 = {{0x1, 0x0, 0x0, 0x0}};
s21_decimal num2 = {{0x0, 0x0, 0x0, 0x0}};
int s21_res = s21_is_equal(num1, num2);
ck_assert_int_eq(s21_res, 0);
s21_res = s21_is_equal(num2, num1);
ck_assert_int_eq(s21_res, 0);